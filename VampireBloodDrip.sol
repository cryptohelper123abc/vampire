// SPDX-License-Identifier: MIT
//   #(#.       ,,,%,,,,,,,.##,,,,,,,,,,,,/%#%,,,,,,,,,,,.%%#%,,,,,,%%#%#%##%#.,,,,/##,,,,,,*%#%#%#%#%*,,,,,,,,*#%#%##%%))#
//   ,##((      ,/#(.,,,,,*(*%#(*.,,,,,,,,/(*%#*.,,,,,,.,#.##%.,,,.(#%*,,,,.%#%.,,.*%%/.,,, .%%,,,,,.(##(,,,,,,*##*
//    .##%     ..#.,,,,,. #,,,%%/,,,,,,,,,.#.*%%/..,,,,,%.(###.,,,,.%%,,,,,/###,,,,*#%..,,,,,##,.,,..###.,,,,,.##%*    
//      (##/   #%.,,,,,.##.,,,(##/,,,,,,,..#.,.%%/(,,./#.,.%%*,,,,,.%%.,.*#%#.,,,,,*#%.,,,,,.%#*.(#%(/,.,,,,,,,*%###((((%#
//      ./%%, .%.,,,,,,.%%%%####%#(.,,,,,.##.,,.%#%.,((.,.*##*,,,,..%#(.,,,,,,,,,,,*#%.,,,,,,#%,..(%#(.,,,,,,,,,##*   
//        /#%*#.,,,,,.,#.,,,,,,,.###*,,,,,.#,,,.,####(.,,,.%##.,,,,(##.,,,,,,,,,,,.###(,,,,,/##/,,,.(##/.,,,,,,/%##   
//         ,%%.,,,,,.##.. . ..,,,*###.,,,,,%**,,,.(%,,,,,,,##/,,,,,,##*,,,,,,,,,,,,/#%,,,,,,,##/,,,,.*###*..,,,/#####(((#%(
//           @   */////////*////((//(//((((((((####((##############(#(((((####/,/#########**.,.. .######(  .##,
//              *///////////((((((##(####(##################%#%############################(*####,   ..#    ###*
//             .//*/////////(####(#####%###########################################/(##(####.(. ....*###(# #,###(.
//             .//////////*/((#/#(##########################%###########%#########......./###(.. /#  (##  ,(##       .*
//            .////////,,,,,,,,,*****/*/(####%#%#%###############%##%##########//,..,...,,,.*##((((# .###((      ..
//            ./////**.... ....... ,....,.,******//(##(########(//(*(/#(#...   ,,/..........##### ,#*/# .       .  .#.(
//           .*/////////,*.                .    ...*,,,**#####/,,,.   ##*. *@@@(@@@@@.. .../#####(* .#  /    . ######.#
//           .//////////////..,&@@@@@@#&@@&%@.       ,*(#####(/,.    /#, @@@@@@@@@@@@,.##(######/.  #####.#(########.
//           .////////(((#///,,((#&&@@@&&@@@(,,./(//*/(###%&##(/,,#####     .,&( .,...(#./,.##/##############.##,
//           .//////((#######//**,*.*.*/**///######%#(##%%&&%##/*/((##.. .,.,/((/((..#...*###################    ..
//            .*////#(##########(//*(////((#######(#######&&###/*/(((#(##( .*####(*#,(.,*(,#################       ...
//             .*///(################################(####&@%##/*((#(#########,.*. ...,..#############              ...
//             ../////(###################################%@##(///(##################/#############.*/#.             .
//               .*/////##################################&&##///((##*  ###########*###############, #,.        ..
//                .,/////(################################&&%#(/((####*...###########################,         .      .
//               . ..*///(/##############################%&&%##((#########./#########*###############,     .
//                 ...*//////(#########%########/(#((#####%%############(####################.#######                 .
//                  ...///////((###############//(#######%#################/# *############,########             ..
//                    .,//////((#(##############//(/######&@&#(########.(#/ ##..#########(######/     *, .,**///*    ..
//                     .*///////###############/**,*/#####%%#####/#( ./#  ./*//. #############/..           ./////*////
//                      ../////((##############( .   .**###(###    .  .     ,,#.(.##########*                   *,,/**.
//                       ..*//////(##(%##########(((*.  ,,,#(#           .   . .*######### .////                  *,* ,
//                        ..*///////(#####//#/(/***/,,,,  .##                  . #######***.  *//               .,. *..
//                          .,///////*,*,*,,,*,,,,,, .(#((##        .        .    . .,****,*,*////**          */,,. *//
//                           .////*,. ......,.,., ..,.(####.     ...,. .@@   ....   .   ,*////////*           ,**,,.*,.
//                            .*/,..              . ...##(   .   &&.*@@@@     . .        **////////*///**  .   ,   ..
//                              .,.                   .##. #@#@*@@&,@@@@*      ...  ,//*///*,//./*./////***    *,
//                              . .    ..**//*/,.......##  &@@@ @@@ @@@@        /// ..///////////////  */*.,.**/
//                                     *//////////(**/##    @@   @  &@@...    ,/*,,//*///////***///*/// ,/   /*,
//                                    .,,/////////////#(             @ ..,   ,//*, .///*.. . ,,,*//////.    ,,
//                                   ....*////*....#/##                @@.   ////*,**/*///**,,,///,.,,,,.
//                                     ...*////,**(###.               %@@@  /////,./*/,////*////.  .,**  *
//                                        ..*/////### .             @%#/.  ./////,.***//*////*,**. ***        `       .
//                                         ...,/(####.  .          .#@/*(  //////*/////////****
//                                           .((####(  ..        %@#@#&,,,*//////////////**/..              `     `
//                                           ... ###          .  %((/%&**////,.../*,.., **,,, .              `      `
//                                     . ......####     .     ..@&#&/* , **//.//*,       ,**.  */.  *.
//                                   **(########### %#  #*.@  &%%%/....*///*,**       . ..  .,******/.      `       `
//        .            ..       ...     . #/###########%(##@# ,&.  */*///*,,,           .****,,.    /                 .
//         ..                       ... ..  ,*#######*(.#..#.     ,//*. ,.*/.        ..*.                .,,,,,***,,,.
//                                      .  , ..####          ..   ***,,,,,         .               .**,        .
//                                .   .    . .,,./,.     .   . .**//,*, ,      .,.         .**... ,  .       ..
//                                      ..   *.  . .(.    ....*,**., */*.  ,*,          .*.
//                  .   .           .   ......      .   .  . .*/**////.,*/*//,  ..,****.
//                ...            ..  ...... .      ..,....      ..,   ...   .*//*,.  ,..        ..
/*

Vampire (VAMP) is a deflationary fair launched token designed to have big buybacks and burns by incorporating a Jackpot system.

This contract is for the Vampire Blood Drip NFTs given to the Fantom DeFi Community

Website: https://vampire.biz
Twitter: https://twitter.com/VampToken
Telegram: https://t.me/VampireToken
Discord: https://discord.gg/ANAqkm5xrk

Whitepaper: https://vampire.biz/whitepaper
Bloodpaper: https://vampire.biz/bloodpaper
Team: https://vampire.biz/team
Audits: https://vampire.biz/audits

*/

pragma solidity ^0.8.15;



// Imports From OpenZeppelin - Updated Solidity Version
// Interfaces
import "../interfaces/IERC165.sol";
import "../interfaces/IERC721.sol";
import "../interfaces/IERC721Metadata.sol";
import "../interfaces/IERC721Receiver.sol";
import "../interfaces/IERC721Enumerable.sol";
// Libraries
import "../libraries/SafeMath.sol";
import "../libraries/Address.sol";
import "../libraries/Strings.sol";
import "../libraries/Counters.sol";
// Utilities
import "../utils/Context.sol";
import "../utils/Ownable.sol";
// Extensions
import "../extensions/ERC165.sol";
import "../extensions/ERC721.sol";
import "../extensions/ERC721Enumerable.sol";
import "../extensions/ERC721URIStorage.sol";



contract VampireBloodDrip is ERC721, ERC721Enumerable, ERC721URIStorage, Ownable {

    using Counters for Counters.Counter;

    Counters.Counter private _tokenIdCounter;
    uint256 public maxSupply = 10000;

    constructor() ERC721("Vampire Blood Drip", "VBD") {}

    function safeMint(address to, string memory uri) public onlyOwner {
        require(_tokenIdCounter.current() <= maxSupply, "Max is 10,000 NFTs.");
        uint256 tokenId = _tokenIdCounter.current();
        _tokenIdCounter.increment();
        _safeMint(to, tokenId);
        _setTokenURI(tokenId, uri);
    }

    // The following functions are overrides required by Solidity.

    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal override(ERC721, ERC721Enumerable){
        super._beforeTokenTransfer(from, to, tokenId);
    }

    function _burn(uint256 tokenId) internal override(ERC721, ERC721URIStorage) {
        // UNBURNABLE
    }

    function tokenURI(uint256 tokenId) public view override(ERC721, ERC721URIStorage) returns (string memory){
        return super.tokenURI(tokenId);
    }

    function supportsInterface(bytes4 interfaceId) public view override(ERC721, ERC721Enumerable) returns (bool){
        return super.supportsInterface(interfaceId);
    }

}



